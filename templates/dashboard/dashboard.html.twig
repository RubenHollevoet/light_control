{% extends 'dashboard/index.html.twig' %}

{% set pageTitle = 'Dashboard' %}

{% block stylesheets %}
    <link rel="stylesheet" href="/css/slider.css"/>
{% endblock %}

{% block content %}
<div>
    <h2 class="mt-3">Scenes</h2>
    {% for sceneLabel in sceneLabels %}
        <div class="ml-2 mt-3">
            <h5 class="text-secondary">{{ sceneLabel }}</h5>
            {% for scene in scenes %}
                {% if scene.label == sceneLabel %}
                    <button type="button" class="btn btn-outline-primary btn-lg js-ajax" data-url="{{ path('api.scene.trigger', {'slug': scene.slug}) }}">{{ scene.name }}</button>
                {% endif %}
            {% endfor %}
        </div>
    {% else %}
        <p>There are no scenes configured</p>
        <a href="{{ path('app.scenes') }}" class="btn btn-success">create scene</a>
    {% endfor %}
    <h2 class="mt-5">Tags</h2>
    {% for tag in tags %}
        <div class="row d-flex align-items-center js-tag" data-devices="{{ tag.deviceIdString }}">
            <div class="col-md-5">
                <span class="btn btn-primary">{{ tag.name }}<span class="badge badge-light ml-2">{{ tag.devices|length }}</span></span>
            </div>
            <div class="col-md-7 py-2 align-items-center d-flex">
                <div class="btn-group mr-3" role="group" aria-label="Button group with nested dropdown">
                    <button type="button" class="btn btn-outline-primary js-ajax" data-url="{{ path('api.yeelight.execute', {'target': 't'~tag.id, 'method': 'set_power', 'params': 'on,sudden,0'}) }}">On</button>
                    <button type="button" class="btn btn-outline-primary js-ajax js-disable-when-off" data-url="{{ path('api.yeelight.execute', {'target': 't'~tag.id, 'method': 'set_power', 'params': 'off,sudden,0'}) }}">Off</button>
                    <button type="button" class="btn btn-outline-primary js-ajax js-disable-when-off" data-url="{{ path('api.yeelight.execute', {'target': 't'~tag.id, 'method': 'set_ct_abx', 'params': '3030,sudden,0'}) }}">WW</button>
                </div>
                <span class="flex-grow-1">
                    <input type="range" min="1" max="100" class="slider js-slider-group js-disable-when-off" id="slider-device-t{{ tag.id }}" data-url="{{ path('api.yeelight.execute', {'target': 't'~tag.id, 'method': 'set_bright', 'params': '__brightness__,sudden,50'}) }}">
                </span>
            </div>
        </div>

    {% endfor %}
    <h2 class="mt-5">Devices</h2>
    {% for device in devices %}
        <div class="row js-yeelight py-3" data-id="{{ device.id }}">
            <div class="col-2 col-md-1 align-self-center">
                {% if device.brand == constant('App\\Entity\\Device::BRAND_YEELIGHT') %}
                    <img src="{{ asset('img/icons/yeelight.png') }}" width="48" height="48" alt="icon yeelight">
                {% elseif device.brand == constant('App\\Entity\\Device::BRAND_ARDUINO') %}
                    <img src="{{ asset('img/icons/arduino.png') }}" width="48" height="48" alt="icon yeelight">
                {% endif %}
            </div>
            <div class="col-5 col-md-2 align-self-center">
                {{ device.name }}
            </div>
            <div class="col-5 col-md-2 align-self-center">
                <span><i class="fas fa-lightbulb fa-lg js-icon-lamp"></i></span>
                <span><i class="fas fa-signal fa-lg ml-2 dark-gray"></i><span class="ml-1 js-icon-bright"></span></span>
            </div>
            <div class="col-md-7 py-2 align-items-center d-flex">
                {% if device.brand == constant('App\\Entity\\Device::BRAND_YEELIGHT') %}
                    <div class="btn-group mr-3" role="group" aria-label="Button group with nested dropdown">
                        <button type="button" class="btn btn-outline-primary js-ajax" data-url="{{ path('api.yeelight.execute', {'target': device.id, 'method': 'set_power', 'params': 'on,sudden,0'}) }}">On</button>
                        <button type="button" class="btn btn-outline-primary js-ajax js-disable-when-off" data-url="{{ path('api.yeelight.execute', {'target': device.id, 'method': 'set_power', 'params': 'off,sudden,0'}) }}">Off</button>
                        <button type="button" class="btn btn-outline-primary js-ajax js-disable-when-off" data-url="{{ path('api.yeelight.execute', {'target': device.id, 'method': 'set_ct_abx', 'params': '3030,sudden,0'}) }}">WW</button>
                    </div>
                    <span class="flex-grow-1">
                        <input type="range" min="1" max="100" class="slider js-slider js-disable-when-off" id="slider-device-{{ device.id }}" data-url="{{ path('api.yeelight.execute', {'target': device.id, 'method': 'set_bright', 'params': '__brightness__,sudden,50'}) }}">
                    </span>
                {% elseif device.brand == constant('App\\Entity\\Device::BRAND_ARDUINO') %}
                    <p>todo: Arduino actions</p>
                {% endif %}
            </div>
            <div class="col-0 col-md-1"></div>
            <div class="col-12 col-md-11 d-flex align-items-center">
                <span class="fas fa-tag dark-gray"></span>
                {% for tag in device.tags %}
                    <span class="ml-2 badge badge-pill badge-primary">{{ tag.name }}</span>
                {% endfor %}
            </div>
        </div>
    {% else %}
        <p>There are no registered devices</p>
        <a href="{{ path('app.devices') }}" class="btn btn-success">register device</a>
    {% endfor %}
    </div>
{% endblock %}

{% block javascripts %}
    <script src="/js/bootstrap/bootstrap.js"></script>
    <script src="/js/axios/axios.min.js"></script>
    <script src="/js/helpers.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function(event) {
            document.querySelectorAll('.js-device-info-action').forEach(function (el) {
                el.addEventListener('click', function (e) {
                    const $infoBlock = document.querySelector('.js-device-info-' + e.currentTarget.dataset.row);
                    $infoBlock.classList.toggle('d-none');
                    el.classList.remove('btn-outline-primary', 'btn-primary');
                    el.classList.add($infoBlock.classList.contains('d-none') ? 'btn-outline-primary' : 'btn-primary');
                });
            });

            document.querySelectorAll('.js-ajax').forEach(function (el) {
                el.addEventListener('click', function (e) {
                    updateLight(e.currentTarget.dataset.url, [$(el).closest('.js-yeelight').data('id')]);
                });
            });
        });

        function updateLightIcons(lightId = 0) {
            lightId = Number(lightId);
            document.querySelectorAll('.js-yeelight').forEach(function (el) {
                if(lightId === 0 || lightId === Number(el.dataset.id)) {
                    axios.get('/api/yeelight/' +  el.dataset.id + '/get_prop/power,bright,color_mode,ct,rgb')
                        .then(function (response) {
                            const data = response.data.result;

                            if(data[0] === 'on') {
                                if(data[2] === '1') {
                                    el.querySelector('.js-icon-lamp').setAttribute('style', 'color: #'+rgbToHex(Number(data[4])));
                                }
                                else if(data[2] === '2') {
                                    el.querySelector('.js-icon-lamp').setAttribute('style', 'color: #'+colorTemperatureToHex(Number(data[3])));
                                }

                                el.querySelectorAll('.js-disable-when-off').forEach(function (actionBtn) {
                                    actionBtn.disabled = true;
                                });
                            }
                            else {
                                el.querySelector('.js-icon-lamp').setAttribute('style', 'color: #000000');

                            }

                            el.querySelector('.js-icon-bright').textContent = data[1] + '%';
                            el.querySelector('.js-slider').value = data[1];

                            // enable/disable action buttons when on/of
                            el.querySelectorAll('.js-disable-when-off').forEach(function (actionBtn) {
                                actionBtn.disabled = data[0] !== 'on';
                            });
                        })
                        .catch(function (error) {
                            // handle error
                        });
                }
            })
        }

        //slider logic
        document.querySelectorAll('.js-slider').forEach(function (el) {
            el.addEventListener('mouseup', function (e) {
                updateLight(e.currentTarget.dataset.url.replace('__brightness__', e.currentTarget.value), [$(e.currentTarget).closest('.js-yeelight').data('id')]);
            });

            el.addEventListener('touchend', function (e) {
                updateLight(e.currentTarget.dataset.url.replace('__brightness__', e.currentTarget.value), [$(e.currentTarget).closest('.js-yeelight').data('id')]);
            });
        });

        document.querySelectorAll('.js-slider-group').forEach(function (el) {
            el.addEventListener('mouseup', function (e) {
                updateLight(e.currentTarget.dataset.url.replace('__brightness__', e.currentTarget.value), $(e.currentTarget).closest('.js-tag').data('devices').split(','));
            });

            el.addEventListener('touchend', function (e) {
                updateLight(e.currentTarget.dataset.url.replace('__brightness__', e.currentTarget.value), $(e.currentTarget).closest('.js-tag').data('devices').split(','));
            });
        });

        updateLightIcons();

        function updateLight(url, lightIds) {
            axios.get(url)
                .then(function (response) {
                    // handle success
                    lightIds.forEach(lightId => updateLightIcons(lightId));
                })
                .catch(function (error) {
                    // handle error
                    console.log(error);
                })
            ;
        }
    </script>
{% endblock %}
